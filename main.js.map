{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/all-info-http.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/autofocus.directive.ts","./src/app/data-storage.service.ts","./src/app/details.service.ts","./src/app/details/details.component.ts","./src/app/details/details.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/keys.pipe.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/regions/regions.component.ts","./src/app/regions/regions.component.html","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/search-results.pipe.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA2C;;;AAG3C;IAAA,MAGa,kBAAkB;QAC7B,YAAoB,KAAiB;YAAjB,UAAK,GAAL,KAAK,CAAY;QAAG,CAAC;QAEzC,UAAU;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;QAChE,CAAC;;wFALU,kBAAkB;yGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6BAJpB;KAYC;AAN8B;6FAAlB,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAA0C;;;AAE1C;IAAA,MAKa,YAAY;;4EAAZ,YAAY;gGAAZ,YAAY;YCPzB,yEACI;YAAA,2EAA+B;YACnC,4DAAM;;uBDFN;KAO4B;AAAH;6FAAZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACa;AACG;AACH;AACf;AACW;AACE;AAEH;AACQ;AACT;AACS;AAEJ;AAE3D,oBAAoB;AACsB;AAC0B;AAC7B;AAGY;;;;;AAEnD,MAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAa,EAAE,SAAS,EAAE,MAAM,EAAE;IACzD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4EAAgB,EAAE;IACxD,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,4EAAgB,EAAE;CAC7D,CAAC;AAEF;IAAA,MA6Ba,SAAS;QACpB,YAAoB,UAA8B;YAA9B,eAAU,GAAV,UAAU,CAAoB;YAChD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAChC,CAAC;;4FAHU,SAAS,cAFR,2DAAY;gJAEb,SAAS,oJAHT,EAAE,YAbJ;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;gBAClD,wDAAa,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE,yCAAyC;oBACjD,UAAU,EAAE,MAAM;iBACnB,CAAC;gBACF,kFAAyB;gBACzB,uFAAuF;gBACvF,iEAAe;aAChB;oBAzDH;KAiEC;AAJqB;mIAAT,SAAS,mBA3BlB,2DAAY;QACZ,wEAAe;QACf,2EAAgB;QAChB,wEAAe;QACf,sEAAiB;QACjB,4EAAgB;QAChB,mEAAa;QACb,4EAAgB;QAChB,wEAAkB;QAClB,oDAAQ,aAGR,uEAAa;QACb,0DAAW;QACX,qEAAgB,0HAMhB,kFAAyB;QACzB,uFAAuF;QACvF,iEAAe;6FAKN,SAAS;cA7BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,2EAAgB;oBAChB,wEAAe;oBACf,sEAAiB;oBACjB,4EAAgB;oBAChB,mEAAa;oBACb,4EAAgB;oBAChB,wEAAkB;oBAClB,oDAAQ;iBACT;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,qEAAgB;oBAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;oBAClD,wDAAa,CAAC,OAAO,CAAC;wBACpB,MAAM,EAAE,yCAAyC;wBACjD,UAAU,EAAE,MAAM;qBACnB,CAAC;oBACF,kFAAyB;oBACzB,uFAAuF;oBACvF,iEAAe;iBAChB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5DD;AAAA;AAAA;AAAqE;;AAErE;IAAA,MAIa,kBAAkB;QAG7B,YAAoB,EAAc;YAAd,OAAE,GAAF,EAAE,CAAY;YAF1B,UAAK,GAAG,IAAI,CAAC;QAEgB,CAAC;QAEtC,QAAQ;YACN,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,+EAA+E;gBAC/E,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;oBACrB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBAChC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;QAED,IACI,SAAS,CAAC,SAAkB;YAC9B,IAAI,CAAC,KAAK,GAAG,SAAS,KAAK,KAAK,CAAC;QACnC,CAAC;;wFAjBU,kBAAkB;sGAAlB,kBAAkB;6BAN/B;KAwBC;AAlB8B;6FAAlB,kBAAkB;cAJ9B,uDAAS;eAAC;gBACT,8CAA8C;gBAC9C,QAAQ,EAAE,aAAa;aACxB;;kBAeE,mDAAK;;;;;;;;;;;;;;ACpBR;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEZ;;;AAE/B;IAAA,MAGa,kBAAkB;QAK7B,YAAoB,YAAgC;YAAhC,iBAAY,GAAZ,YAAY,CAAoB;YAJ5C,mBAAc,GAAc,EAAE,CAAC;YAC/B,oBAAe,GAAoB,EAAE,CAAC;YAC9C,cAAS,GAAG,IAAI,4CAAO,EAAa,CAAC;QAEkB,CAAC;QAExD,WAAW;YACT,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CACtC,CAAC,QAAmB,EAAE,EAAE;gBACtB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oBACtC,OAAO;wBACL,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE;qBACvC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;YACjC,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CACF,CAAC;QACJ,CAAC;QACD,IAAI,aAAa;YACf,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;QACD,IAAI,cAAc;YAChB,OAAO,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;;wFA9BU,kBAAkB;yGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6BALpB;KAsCC;AA/B8B;6FAAlB,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;;;AAG3C;IAAA,MAGa,cAAc;QACzB,YAAoB,WAA+B;YAA/B,gBAAW,GAAX,WAAW,CAAoB;QAAG,CAAC;QAEvD,UAAU,CAAC,IAAY;YACrB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CACxC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,KAAK,IAAI,CAC5C,CAAC;QACJ,CAAC;;gFAPU,cAAc;qGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;yBAJpB;KAcC;AAR0B;6FAAd,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICmBlC,yFACF;;;IAcF,sEAAwD;IAAA,uDAAY;IAAA,4DAAM;;;IAAlB,0DAAY;IAAZ,4EAAY;;;IAIpE,0EACE;IAAA,0EAAiB;IAAA,uDAAQ;IAAA,4DAAM;IAC/B,0EAAmB;IAAA,uDAAkC;IAAA,4DAAM;IAC7D,4DAAM;;;;IAFa,0DAAQ;IAAR,iFAAQ;IACN,0DAAkC;IAAlC,yGAAkC;;;IAHzD,sEACE;IAAA,oHACE;;IAGJ,4DAAM;;;IAJqB,0DAAkD;IAAlD,sKAAkD;;;;;IAU7E,sEACE;IAAA,0EAAqB;IAAA,wEAAqH;IAAA,uDAAiB;IAAA,4DAAI;IAAA,4DAAM;IACrK,0EAAuB;IAAA,uDAAuB;IAAA,4DAAM;IACtD,4DAAM;;;IAFyC,0DAAsC;IAAtC,6IAAsC;IAAuD,0DAAiB;IAAjB,kFAAiB;IACpI,0DAAuB;IAAvB,wFAAuB;;;;IAe9C,0EACE;IAAA,wEAAqH;IAAA,uDAAiB;IAAA,4DAAI;IAAA,4DAAC;IAAA,uEAAM;IAAA,uDAAiB;IAAA,4DAAO;IAAA,6DAC3K;IAAA,4DAAM;;;IADoB,0DAAsC;IAAtC,6IAAsC;IAAuD,0DAAiB;IAAjB,kFAAiB;IAAW,0DAAiB;IAAjB,kFAAiB;;;IAsBpK,sEAAiD;IAAA,uDAAU;IAAA,4DAAM;;;IAAhB,0DAAU;IAAV,2EAAU;;;IAI3D,sEAAqD;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,iFAAgB;;;;ADtFjF;IAAA,MAKa,gBAAgB;QAM3B,YACU,SAAmB,EACnB,eAA+B,EAC/B,eAA+B;YAF/B,cAAS,GAAT,SAAS,CAAU;YACnB,oBAAe,GAAf,eAAe,CAAgB;YAC/B,oBAAe,GAAf,eAAe,CAAgB;QACtC,CAAC;QAEJ,QAAQ;YACN,IAAI,CAAC,YAAY,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;YACvD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CACjD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CACnD,CAAC;gBACF,IAAI,CAAC,UAAU,GAAG,QAAQ,CACxB,IAAI,CAAC,YAAY,CAAC,UAAU,EAC5B,EAAE,CACH,CAAC,cAAc,EAAE,CAAC;YACrB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC;QACD,MAAM;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC;QACD,kBAAkB;YAChB,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;QACjE,CAAC;;oFAjCU,gBAAgB;oGAAhB,gBAAgB;YCX7B,yEACE;YAAA,yEACE;YAAA,yEACE;YAAA,4EACE;YADmB,wIAAS,YAAQ,IAAC;YACrC,kEAAyB;YAAA,+DAAI;YAAA,4DAAS;YACxC,yEACE;YAAA,kEAA2B;YAAA,iEAAM;YAAA,4DAAM;YAC3C,4DAAM;YACN,yEACE;YAAA,0EACE;YAAA,0EAAkB;YAAA,wDAAqB;YAAA,4DAAM;YAC7C,sEACF;YAAA,4DAAM;YACN,2EACE;YAAA,+EAEE;YAAA,kFACE;YAAA,8FACE;YAAA,2HACE;YAEJ,4DAAyB;YAC3B,4DAAa;YACf,4DAAU;YACZ,4DAAM;YACN,2EACE;YAAA,2EACE;YAAA,2EAAmB;YAAA,iEAAK;YAAA,4DAAM;YAC9B,2EAAiB;YAAA,mEAAO;YAAA,4DAAM;YAC9B,2EAAmB;YAAA,wDAAqB;YAAA,4DAAM;YAC9C,2EAAiB;YAAA,4EAAgB;YAAA,4DAAM;YACvC,2EAAmB;YAAA,wDAA2B;YAAA,4DAAM;YACpD,2EAAiB;YAAA,kFAAsB;YAAA,4DAAM;YAC7C,2EACE;YAAA,+GAAwD;YAC1D,4DAAM;YACN,2EAA8B;YAAA,yEAAa;YAAA,yEAAkC;YAA/B,oIAAS,wBAAoB,IAAC;YAAC,wDAAc;YAAA,4DAAI;YAAA,4DAAM;YACrG,+GACE;YAKJ,4DAAM;YACN,2EACE;YAAA,2EAAmB;YAAA,oEAAQ;YAAA,4DAAM;YACjC,2EAAsB;YAAA,iEAAK;YAAA,4DAAM;YACjC,2EAAgC;YAAA,wEAAY;YAAA,4DAAM;YAClD,+GACE;YAGJ,4DAAM;YACN,2EACE;YAAA,2EAAmB;YAAA,iEAAK;YAAA,4DAAM;YAC9B,2EAAiB;YAAA,+EAAmB;YAAA,4DAAM;YAC1C,2EAAmB;YAAA,wDAA2B;YAAA,4DAAM;YACpD,2EAAiB;YAAA,+EAAmB;YAAA,4DAAM;YAC1C,2EAAmB;YAAA,wDAA2B;YAAA,4DAAM;YACpD,2EAAiB;YAAA,+EAAmB;YAAA,4DAAM;YAC1C,2EAAmB;YAAA,wDAA4B;YAAA,4DAAM;YACrD,2EAAiB;YAAA,uFAA2B;YAAA,4DAAM;YAClD,2EAAmB;YAAA,wDAA6B;YAAA,4DAAM;YACtD,2EAAiB;YAAA,mFAAuB;YAAA,4DAAM;YAC9C,2EACE;YAAA,+GACE;YAEJ,4DAAM;YACN,2EAAiB;YAAA,6EAAiB;YAAA,4DAAM;YACxC,2EAAmB;YAAA,wDAA+B;YAAA,4DAAM;YAC1D,4DAAM;YACN,2EACE;YAAA,2EAAmB;YAAA,qEAAS;YAAA,4DAAM;YAClC,2EAAiB;YAAA,mEAAO;YAAA,4DAAM;YAC9B,2EAAmB;YAAA,yEAAyH;YAAA,wDAAuB;YAAA,4DAAI;YAAA,4DAAM;YAC7K,2EAAiB;YAAA,sEAAU;YAAA,4DAAM;YACjC,2EAAmB;YAAA,wDAA0B;YAAA,4DAAM;YACnD,2EAAiB;YAAA,oEAAQ;YAAA,4DAAM;YAC/B,2EAAmB;YAAA,wDAAwB;YAAA,4DAAM;YACjD,2EAAiB;YAAA,oEAAQ;YAAA,4DAAM;YAC/B,2EAAmB;YAAA,wDAAwB;YAAA,4DAAM;YACjD,2EAAiB;YAAA,oEAAQ;YAAA,4DAAM;YAC/B,2EAAmB;YAAA,wDAAuB;YAAA,4DAAM;YAChD,2EAAiB;YAAA,kEAAK;YAAA,4DAAM;YAC5B,4EAAmB;YAAA,yDAAwB;YAAA,4DAAM;YACjD,4EAAiB;YAAA,0EAAa;YAAA,4DAAM;YACpC,4EACE;YAAA,iHAAiD;YACnD,4DAAM;YACN,4EAAiB;YAAA,4EAAe;YAAA,4DAAM;YACtC,4EACE;YAAA,iHAAqD;YACvD,4DAAM;YACN,4EAAiB;YAAA,uEAAU;YAAA,4DAAM;YACjC,4EAAmB;YAAA,yDAA0B;YAAA,4DAAM;YACnD,4EAAiB;YAAA,wEAAW;YAAA,4DAAM;YAClC,4EAAmB;YAAA,yDAAc;YAAA,4DAAM;YACzC,4DAAM;YACR,4DAAM;YACR,4DAAM;YACR,4DAAM;YACR,4DAAM;;YAjGoB,0DAAoB;YAApB,8IAAoB;YAKpB,0DAAqB;YAArB,sFAAqB;YAClC,0DAAyB;YAAzB,mJAAyB;YAGrB,0DAAgC;YAAhC,yFAAgC;YAE3B,0DAAsB;YAAtB,+EAAsB;YACR,0DAAgB;YAAhB,yEAAgB;YAYvB,0DAAqB;YAArB,sFAAqB;YAErB,0DAA2B;YAA3B,4FAA2B;YAGvC,0DAAkD;YAAlD,kGAAkD;YAEoB,0DAAc;YAAd,+EAAc;YACtF,0DAAwB;YAAxB,sFAAwB;YAWxB,0DAA+C;YAA/C,+FAA+C;YAQjC,0DAA2B;YAA3B,4FAA2B;YAE3B,0DAA2B;YAA3B,4FAA2B;YAE3B,0DAA4B;YAA5B,6FAA4B;YAE5B,0DAA6B;YAA7B,8FAA6B;YAGxB,0DAAgD;YAAhD,gGAAgD;YAKrD,0DAA+B;YAA/B,gGAA+B;YAKP,0DAAoC;YAApC,8IAAoC;YAA6D,0DAAuB;YAAvB,wFAAuB;YAEhJ,0DAA0B;YAA1B,2FAA0B;YAE1B,0DAAwB;YAAxB,yFAAwB;YAExB,0DAAwB;YAAxB,yFAAwB;YAExB,0DAAuB;YAAvB,wFAAuB;YAEvB,0DAAwB;YAAxB,uGAAwB;YAGpC,0DAA2C;YAA3C,6FAA2C;YAI3C,0DAA+C;YAA/C,mGAA+C;YAGnC,0DAA0B;YAA1B,2FAA0B;YAE1B,0DAAc;YAAd,+EAAc;;2BDjG3C;KA6CC;AAlC4B;6FAAhB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICAlD,yEACI;IAAA,yEAAyB;IAAA,2EAAgB;IAAA,4DAAM;IAC/C,uEACI;IADD,0SAAoB,IAAI,IAAC;IACxB,kEAA2B;IAC/B,4DAAI;IACR,4DAAM;;;;IACN,gFAAkF;IAAtE,0VAAqC;IAAoB,4DAAa;;;IAClF,yEAA+C;;ADL/C;IAAA,MAKa,aAAa;QAExB;YADA,eAAU,GAAY,KAAK,CAAC;QACb,CAAC;QAEhB,QAAQ,KAAI,CAAC;;8EAJF,aAAa;iGAAb,aAAa;YCP1B,yGACI;YAKJ,uHAAqE;YACrE,yHAAiC;;YAPb,iFAAmB;YAMW,0DAAkB;YAAlB,gFAAkB;YACvD,0DAAmB;YAAnB,iFAAmB;;wBDPhC;KAYC;AALyB;6FAAb,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAoD;;AAEpD;IAAA,MACa,QAAQ;QACnB,SAAS,CAAC,KAAK;YACb,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;YACD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;;oEANU,QAAQ;sGAAR,QAAQ;mBAHrB;KAUC;AAPoB;6FAAR,QAAQ;cADpB,kDAAI;eAAC,EAAE,IAAI,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;ICgBnD,0EACE;IAAA,4EACE;IAAA,4EAAoI;IAA7F,mVAA0B;IAAjE,4DAAoI;IAAA,uDACtI;IAAA,4DAAQ;IACV,4DAAM;;;;IAHG,0DAAgB;IAAhB,4EAAgB;IACD,0DAAkB;IAAlB,8EAAkB;IAA8F,0DACtI;IADsI,uFACtI;;;ADhBR;IAAA,MAKa,eAAe;QAM1B,YAAoB,UAA8B;YAA9B,eAAU,GAAV,UAAU,CAAoB;YAJzC,iBAAY,GAAG,MAAM,CAAC;YAC/B,eAAU,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;YAClE,eAAU,GAAG,KAAK,CAAC;QAEmC,CAAC;QACvD,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,YAAY;YACV,gCAAgC;YAChC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC;gBAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;aAChC,CAAC,CAAC;QACL,CAAC;;kFAfU,eAAe;mGAAf,eAAe;YCR5B,yEACE;YAAA,uEACE;YAAA,yEACE;YAAA,yEACE;YAAA,0EACE;YAAA,kEAA2B;YAC7B,4DAAO;YACP,8EAEF;YAFmC,yLAA0B,8FAAuC,kBAAc,IAArD;YAA3D,4DAEF;YAAA,4DAAM;YACN,4EAAwD;YAAjC,2KAAgC;YAAC,kEACtD;YAAA,mEAA2B;YAC7B,4DAAS;YACX,4DAAM;YACN,0EACE;YACA,8GACE;YAIJ,4DAAM;YACR,4DAAO;YACT,4DAAM;;YAhBmC,0DAA0B;YAA1B,qFAA0B;YAOhC,0DAAmC;YAAnC,0JAAmC;YAE3D,0DAAmC;YAAnC,mFAAmC;;0BDhB9C;KAwBC;AAhB2B;6FAAf,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAEE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICChD,yEACE;IAAA,yEACE;IAAA,oEACA;IAAA,0EAAmF;IAAA,uDAAU;IAAA,4DAAO;IACtG,4DAAM;IACR,4DAAM;;;;IAHG,0DAAwB;IAAxB,wJAAwB;IACV,0DAAoC;IAApC,6IAAoC;IAA4B,0DAAU;IAAV,0EAAU;;ADFnG;IAAA,MAKa,gBAAgB;QAE3B;YAMA,aAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,oBAAoB,MAAM,MAAM,CAAC;YACtD,WAAM,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,MAAM,EAAE,CAAC;QAPvB,CAAC;QAEhB,QAAQ;YACN,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QACrE,CAAC;;oFANU,gBAAgB;oGAAhB,gBAAgB;YCP7B,yEACE;YAAA,4GACE;YAKJ,4DAAM;;YANgB,0DAA8B;YAA9B,gFAA8B;;2BDDpD;KAiBC;AAV4B;6FAAhB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICGhD,yEACE;IAAA,kEAA0B;IAC5B,4DAAM;;;;;;IACN,yEACE;IAAA,oEACA;IAAA,yEAA2B;IAAA,uDAAe;IAAA,4DAAM;IAChD,yEACE;IAAA,mEAAqC;IAAA,uDAAkB;IAAA,4DAAM;IAC/D,0EACE;IAAA,mEAAgC;IAChC,0EAAsB;IAAA,wDAAoB;IAAA,4DAAM;IAClD,4DAAM;IACN,2EACE;IAAA,oEAAgC;IAChC,2EACE;IAAA,4EAA8G;IAAA,wDAAiB;IAAA,4DAAO;IACtI,4EAAkB;IAAA,wDAAsB;IAAA,4DAAO;IACjD,4DAAM;IACR,4DAAM;IACN,8EAAiF;IAAA,qEAAS;IAAA,4DAAS;IACrG,4DAAM;;;IAhBc,0DAAmB;IAAnB,4IAAmB;IACV,0DAAe;IAAf,+EAAe;IAEH,0DAAkB;IAAlB,kFAAkB;IAGjC,0DAAoB;IAApB,oFAAoB;IAKrB,0DAAoC;IAApC,8IAAoC;IAAuD,0DAAiB;IAAjB,iFAAiB;IAC7G,0DAAsB;IAAtB,+FAAsB;IAGvB,0DAA2D;IAA3D,kLAA2D;;ADlBpF;IAAA,MAKa,gBAAgB;QAM3B,YACU,aAA6B,EAC7B,UAA8B;YAD9B,kBAAa,GAAb,aAAa,CAAgB;YAC7B,eAAU,GAAV,UAAU,CAAoB;YAPxC,iBAAY,GAAG,EAAE,CAAC;YAClB,iBAAY,GAAG,EAAE,CAAC;YAClB,YAAO,GAAS,EAAE,CAAC;YACnB,eAAU,GAAG,IAAI,CAAC;QAKf,CAAC;QAEJ,QAAQ;YACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACjE,8CAA8C;YAC9C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;gBACrD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACjE,8CAA8C;YAC9C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;gBAC1D,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;YAC/C,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAoB,EAAE,EAAE;gBAC3D,WAAW;gBACX,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;oBAClC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;oBAC3C,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;gBAC7C,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACL,CAAC;;oFApCU,gBAAgB;oGAAhB,gBAAgB;YCT7B,2EAAqF;YAErF,yEACE;YAAA,4GACE;YAEF,8GACE;;YAiBJ,4DAAM;;YAxBM,0FAA6B;YAGnB,0DAAkB;YAAlB,gFAAkB;YAGpB,0DAAsE;YAAtE,qLAAsE;;2BDN1F;KA8CC;AArC4B;6FAAhB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAoD;;AAEpD;IAAA,MAGa,iBAAiB;QAC5B,SAAS,CAAC,KAAU,EAAE,YAAoB,EAAE,YAAoB;YAC9D,IAAI,CAAC,YAAY,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;YACD,IACE,YAAY,KAAK,MAAM;gBACvB,YAAY,KAAK,QAAQ;gBACzB,YAAY,KAAK,UAAU;gBAC3B,YAAY,KAAK,UAAU,EAC3B;gBACA,OAAO,IAAI,CAAC;aACb;YAED,IAAI,YAAY,KAAK,UAAU,EAAE;gBAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACtB,CAAC,CAAC,UAAU,CAAC,IAAI,CACf,CAAC,CAAC,EAAE,CACF,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;oBACpD,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CACvD,CACF,CAAC;aACH;YAED,IAAI,YAAY,KAAK,UAAU,EAAE;gBAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACtB,CAAC,CAAC,SAAS,CAAC,IAAI,CACd,CAAC,CAAC,EAAE,CACF,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;oBACxD,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CACvD,CACF,CAAC;aACH;YACD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACtB,CAAC,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CACtD,CAAC;QACJ,CAAC;;sFApCU,iBAAiB;wHAAjB,iBAAiB;4BAL9B;KA0CC;AArC6B;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;;;;;;;;;ICYtE,0EACE;IAAA,qEACA;IAAA,2EAAmB;IAAA,uDAAe;IAAA,4DAAO;IAC3C,4DAAM;;;IAH0F,mKAA6C;IACtI,0DAAmB;IAAnB,4IAAmB;IACL,0DAAe;IAAf,+EAAe;;;;ADVtC;IAAA,MAKa,eAAe;QAI1B,YAAoB,UAA8B,EAAU,MAAc;YAAtD,eAAU,GAAV,UAAU,CAAoB;YAAU,WAAM,GAAN,MAAM,CAAQ;YAHhE,kBAAa,GAAG,IAAI,0DAAY,EAAW,CAAC;YAEtD,YAAO,GAAS,EAAE,CAAC;QAC0D,CAAC;QAE9E,QAAQ;YACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;QAChD,CAAC;QACD,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;QACD,QAAQ;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE;gBACzC,WAAW,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE;aACtC,CAAC,CAAC;QACL,CAAC;;kFAhBU,eAAe;mGAAf,eAAe;YCT5B,yEACE;YAAA,uEACE;YADC,kIAAS,iBAAa,IAAC;YACxB,kEAA2B;YAC7B,4DAAI;YACN,4DAAM;YACN,6EACE;YADI,2IAAY,cAAU,IAAC;YAC3B,2EACA;YADiC,yLAA0B;YAA3D,4DACA;YAAA,uEACE;YAAA,kEAA0B;YAC5B,4DAAI;YACN,4DAAO;YACP,yEACE;YAAA,2GACE;;;YAGJ,4DAAM;;YAV6B,0DAA0B;YAA1B,qFAA0B;YAC1C,0DAAkC;YAAlC,8IAAkC;YAK/B,0DAA2E;YAA3E,qPAA2E;;0BDZjG;KA0BC;AAjB2B;6FAAf,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAEE,oDAAM;;;;;;;;;;;;;;AEVT;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllInfoHttpService {\n  constructor(private _http: HttpClient) {}\n\n  getAllData() {\n    return this._http.get('https://restcountries.eu/rest/v2/all');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegionsComponent } from './regions/regions.component';\nimport { SearchComponent } from './search/search.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SearchResultsPipe } from './search-results.pipe';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResultsComponent } from './results/results.component';\nimport { HomeComponent } from './home/home.component';\nimport { DetailsComponent } from './details/details.component';\nimport { DataStorageService } from './data-storage.service';\nimport { AutofocusDirective } from './autofocus.directive';\n\n// add these imports\nimport { AgmCoreModule } from '@agm/core';\nimport { AgmSnazzyInfoWindowModule } from '@agm/snazzy-info-window';\nimport { KeysPipe } from './keys.pipe';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'results/:filter', component: ResultsComponent },\n  { path: 'details/:alpha3Code', component: DetailsComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegionsComponent,\n    SearchComponent,\n    SearchResultsPipe,\n    ResultsComponent,\n    HomeComponent,\n    DetailsComponent,\n    AutofocusDirective,\n    KeysPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes, { useHash: true }),\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDhMVN7GypCP7HhT_3ydc8in7Qm2BDeQM0',\n      apiVersion: '3.31'\n    }),\n    AgmSnazzyInfoWindowModule,\n    // ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    ScullyLibModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private _dataStore: DataStorageService) {\n    this._dataStore.processData();\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[autofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n  private focus = true;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    if (this.focus) {\n      // Otherwise Angular throws error: Expression has changed after it was checked.\n      window.setTimeout(() => {\n        this.el.nativeElement.focus();\n      });\n    }\n  }\n\n  @Input()\n  set autofocus(condition: boolean) {\n    this.focus = condition !== false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AllInfoHttpService } from './all-info-http.service';\nimport { Subject } from 'rxjs';\nimport { ShortDataType, UserQuery, Country } from './shared';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n  private _fullDataStore: Country[] = [];\n  private _shortDataStore: ShortDataType[] = [];\n  userQuery = new Subject<UserQuery>();\n\n  constructor(private _httpService: AllInfoHttpService) {}\n\n  processData() {\n    this._httpService.getAllData().subscribe(\n      (response: Country[]) => {\n        this._shortDataStore = response.map(r => {\n          return {\n            name: r.name,\n            flag: r.flag,\n            alpha3Code: r.alpha3Code.toLowerCase()\n          };\n        });\n\n        this._fullDataStore = response;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n  get longDataStore(): Country[] {\n    return this._fullDataStore;\n  }\n  get shortDataStore(): ShortDataType[] {\n    return this._shortDataStore;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataStorageService } from './data-storage.service';\nimport {Country} from './shared';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  constructor(private dataStorage: DataStorageService) {}\n\n  getDetails(code: string): Country {\n    return this.dataStorage.longDataStore.find(\n      d => d['alpha3Code'].toLowerCase() === code\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Location } from '@angular/common';\nimport { DetailsService } from '../details.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Country } from '../shared';\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  searchedData: Country;\n  translations: string[];\n  showTranslations: boolean;\n  toggleText: string;\n  population: string;\n  constructor(\n    private _location: Location,\n    private _detailsService: DetailsService,\n    private _activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.searchedData = { name: '', flag: '', latlng: [] };\n    this.population = '';\n    this.showTranslations = false;\n    this.toggleText = 'Show';\n    setTimeout(() => {\n      this.searchedData = this._detailsService.getDetails(\n        this._activatedRoute.snapshot.params['alpha3Code']\n      );\n      this.population = parseInt(\n        this.searchedData.population,\n        10\n      ).toLocaleString();\n    }, 2000);\n  }\n  goBack(): void {\n    this._location.back();\n  }\n  toggleTranslations(): void {\n    this.showTranslations = !this.showTranslations;\n    this.toggleText = this.toggleText === 'Show' ? 'Hide' : 'Show';\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"details__container\">\n    <div class=\"nav\">\n      <button class=\"back\" (click)=\"goBack()\">\n        <i class=\"icon-back\"></i>Back</button>\n      <div class=\"search\" [routerLink]=\"['/']\">\n        <i class=\"icon-search\"></i>Search</div>\n    </div>\n    <div class=\"details\">\n      <div class=\"header\">\n        <div class=\"name\">{{searchedData.name}}</div>\n        <img [src]=\"searchedData.flag\" [alt]=\"searchedData.name.toLowerCase()\">\n      </div>\n      <div class=\"map\">\n        <agm-map [gestureHandling]=\"'coopeative'\" [zoom]=\"5\" [scrollwheel]=\"null\" style=\"height: 400px\" [latitude]=\"searchedData.latlng[0]\"\n          [longitude]=\"searchedData.latlng[1]\">\n          <agm-marker [latitude]=\"51.673858\" [longitude]=\"7.815982\">\n            <agm-snazzy-info-window [maxWidth]=\"200\" [closeWhenOthersOpen]=\"true\">\n              <ng-template>\n                My first Snazzy Info Window!\n              </ng-template>\n            </agm-snazzy-info-window>\n          </agm-marker>\n        </agm-map>\n      </div>\n      <div class=\"cards__container\">\n        <div class=\"common names\">\n          <div class=\"label\">Names</div>\n          <div class=\"key\">Common:</div>\n          <div class=\"value\">{{searchedData.name}}</div>\n          <div class=\"key\">Common (Native):</div>\n          <div class=\"value\">{{searchedData.nativeName}}</div>\n          <div class=\"key\">Alternative spellings:</div>\n          <div class=\"value\">\n            <div *ngFor=\"let spelling of searchedData.altSpellings\">{{spelling}}</div>\n          </div>\n          <div class=\"key translations\">Translations:<a (click)=\"toggleTranslations()\">{{toggleText}}</a></div>\n          <div *ngIf=\"showTranslations\">\n            <div class=\"translation\" *ngFor=\"let key of searchedData.translations|keys\">\n              <div class=\"key\">{{key}}:</div>\n              <div class=\"value\">{{searchedData.translations[key]}}</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"common language\">\n          <div class=\"label\">Language</div>\n          <div class=\"key name\">Name:</div>\n          <div class=\"value native__name\">Native Name:</div>\n          <div *ngFor=\"let language of searchedData.languages\">\n            <div class=\"key row\"><a class=\"router__link\" [routerLink]=\"['/results','language']\" [queryParams]=\"{q:(language.name||'').toLowerCase()}\">{{language.name}}</a></div>\n            <div class=\"value row\">{{language.nativeName}}</div>\n          </div>\n        </div>\n        <div class=\"common codes\">\n          <div class=\"label\">Codes</div>\n          <div class=\"key\">ISO 3166-1 alpha-2:</div>\n          <div class=\"value\">{{searchedData.alpha2Code}}</div>\n          <div class=\"key\">ISO 3166-1 alpha-3:</div>\n          <div class=\"value\">{{searchedData.alpha3Code}}</div>\n          <div class=\"key\">ISO 3166-1 numeric:</div>\n          <div class=\"value\">{{searchedData.numericCode}}</div>\n          <div class=\"key\">International calling code:</div>\n          <div class=\"value\">{{searchedData.callingCodes}}</div>\n          <div class=\"key\">ISO 4217 currency code:</div>\n          <div class=\"value\">\n            <div class=\"currency\" *ngFor=\"let currency of searchedData.currencies\">\n              <a class=\"router__link\" [routerLink]=\"['/results','currency']\" [queryParams]=\"{q:(currency.code||'').toLowerCase()}\">{{currency.name}}</a>(<span>{{currency.code}}</span>)\n            </div>\n          </div>\n          <div class=\"key\">Top level domain:</div>\n          <div class=\"value\">{{searchedData.topLevelDomain}}</div>\n        </div>\n        <div class=\"common geography\">\n          <div class=\"label\">Geography</div>\n          <div class=\"key\">Region:</div>\n          <div class=\"value\"><a class=\"router__link\" [routerLink]=\"['/results','region']\" [queryParams]=\"{q:(searchedData.region||'').toLowerCase()}\">{{searchedData.region}}</a></div>\n          <div class=\"key\">Subregion:</div>\n          <div class=\"value\">{{searchedData.subregion}}</div>\n          <div class=\"key\">Capital:</div>\n          <div class=\"value\">{{searchedData.capital}}</div>\n          <div class=\"key\">Demonym:</div>\n          <div class=\"value\">{{searchedData.demonym}}</div>\n          <div class=\"key\">Lat/Lng:</div>\n          <div class=\"value\">{{searchedData.latlng}}</div>\n          <div class=\"key\">Area:</div>\n          <div class=\"value\">{{searchedData.area}}km²</div>\n          <div class=\"key\">Land borders:</div>\n          <div class=\"value\">\n            <div *ngFor=\"let border of searchedData.borders\">{{border}}</div>\n          </div>\n          <div class=\"key\">Regional Blocs:</div>\n          <div class=\"value\">\n            <div *ngFor=\"let bloc of searchedData.regionalBlocs\">{{bloc.acronym}}</div>\n          </div>\n          <div class=\"key\">Timezones:</div>\n          <div class=\"value\">{{searchedData.timezones}}</div>\n          <div class=\"key\">Population:</div>\n          <div class=\"value\">{{population}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  openSearch: Boolean = false;\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"search\" *ngIf=\"!openSearch\">\n    <div class=\"instruction\">Select a Region:</div>\n    <a (click)=\"openSearch=true\">\n        <i class=\"icon-search\"></i>\n    </a>\n</div>\n<app-search (closedClicked)=\"openSearch = $event\" *ngIf=\"openSearch\"></app-search>\n<app-regions *ngIf=\"!openSearch\"></app-regions>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'keys' })\nexport class KeysPipe implements PipeTransform {\n  transform(value): any {\n    if (!value) {\n      return null;\n    }\n    return Object.keys(value);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataStorageService } from '../data-storage.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  @Input() searchedText: string;\n  @Input() searchedType = 'name';\n  categories: string[] = ['name', 'region', 'currency', 'language'];\n  showFilter = false;\n\n  constructor(private _dataStore: DataStorageService) { }\n  ngOnInit() { }\n  onSubmit() { }\n  userQuerying() {\n    // emit the entered text by user\n    this._dataStore.userQuery.next({\n      searchedText: this.searchedText,\n      searchedType: this.searchedType\n    });\n  }\n}\n","<div class=\"navbar\">\r\n  <form>\r\n    <div class=\"search__container\">\r\n      <div class=\"search__input--wrapper\">\r\n        <span class=\"search__icon\">\r\n          <i class=\"icon-search\"></i>\r\n        </span>\r\n        <input type=\"text\" name=\"search\" [(ngModel)]=\"searchedText\" placeholder=\"Search\" (ngModelChange)=\"userQuerying()\" #search\r\n          autofocus>\r\n      </div>\r\n      <button class=\"filter\" (click)=\"showFilter=!showFilter\">Filter\r\n        <i class=\"icon-filter\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"filter__container\" [ngClass]={show__filter:showFilter}>\r\n      <!-- radio buttons to select category -->\r\n      <div *ngFor=\"let category of categories\" class=\"category__radio\">\r\n        <label [for]=\"category\" [ngClass]=\"{'category__selected':searchedType==category,'category__not--selected':searchedType!=category}\">\r\n          <input type=\"radio\" [value]=\"category\" [(ngModel)]=\"searchedType\" [id]=\"category\" name=\"category\" (ngModelChange)=\"userQuerying()\"> {{category}}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-regions',\n  templateUrl: './regions.component.html',\n  styleUrls: ['./regions.component.css']\n})\nexport class RegionsComponent implements OnInit {\n  regions: string[];\n  constructor() {}\n\n  ngOnInit() {\n    this.regions = ['americas', 'europe', 'africa', 'asia', 'oceania'];\n  }\n\n  getImage = region => `./assets/regions/${region}.svg`;\n  getAlt = region => `region ${region}`;\n}\n","<div class=\"regions\">\n  <div class=\"region\" *ngFor=\"let region of regions\">\n    <div class=\"middle\">\n      <img [src]=\"getImage(region)\" [alt]=\"getAlt(region)\">\n      <span class=\"name\" [routerLink]=\"['/results','region']\" [queryParams]=\"{q:region}\">{{region}}</span>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { DataStorageService } from '../data-storage.service';\nimport { UserQuery } from '../shared';\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n  searchedText = '';\n  searchedType = '';\n  results: {}[] = [];\n  showLoader = true;\n  timer;\n  constructor(\n    private activateRoute: ActivatedRoute,\n    private _dataStore: DataStorageService\n  ) {}\n\n  ngOnInit() {\n    this.searchedType = this.activateRoute.snapshot.params['filter'];\n    // get query parameter q if changed afterwards\n    this.activateRoute.params.subscribe((params: Params) => {\n      this.searchedType = params['filter'];\n    });\n\n    this.searchedText = this.activateRoute.snapshot.queryParams['q'];\n    // get query parameter q if changed afterwards\n    this.activateRoute.queryParams.subscribe((params: Params) => {\n      this.searchedText = params['q'];\n    });\n    setTimeout(() => {\n      this.showLoader = false;\n      this.results = this._dataStore.longDataStore;\n    }, 2000);\n\n    this._dataStore.userQuery.subscribe((userQuery: UserQuery) => {\n      // debounce\n      window.clearTimeout(this.timer);\n      this.timer = window.setTimeout(() => {\n        this.searchedText = userQuery.searchedText;\n        this.searchedType = userQuery.searchedType;\n      }, 1000);\n    });\n  }\n}\n","<app-navbar [searchedText]=\"searchedText\" [searchedType]=\"searchedType\"></app-navbar>\r\n\r\n<div class=\"results\">\r\n  <div class=\"loader\" *ngIf=\"showLoader\">\r\n    <i class=\"icon-spin5\"></i>\r\n  </div>\r\n  <div class=\"card\" *ngFor=\"let result of results|searchResults:searchedText:searchedType\">\r\n    <img class=\"flag\" [src]=\"result.flag\" [alt]=\"result.name.toLowerCase()\" height=\"200\">\r\n    <div class=\"country__name\">{{result.name}}</div>\r\n    <div class=\"capital\">\r\n      <i class=\"icon-map-marker-solid\"></i>{{result.capital}}</div>\r\n    <div class=\"timezones\">\r\n      <i class=\"icon-clock-solid\"></i>\r\n      <div class=\"timezone\">{{result.timezones}}</div>\r\n    </div>\r\n    <div class=\"region\">\r\n      <i class=\"icon-globe-solid\"></i>\r\n      <div class=\"container\">\r\n        <span class=\"name\" [routerLink]=\"['/results','region']\" [queryParams]=\"{q:(result.region||'').toLowerCase()}\">{{result.region}}</span>\r\n        <span class=\"sub\">({{result.subregion}})</span>\r\n      </div>\r\n    </div>\r\n    <button class=\"more\" [routerLink]=\"['/details',result.alpha3Code.toLowerCase()]\">More Info</button>\r\n  </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchResults'\n})\nexport class SearchResultsPipe implements PipeTransform {\n  transform(value: any, searchedText: string, searchedType: string): any {\n    if (!searchedText) {\n      return null;\n    }\n    if (\n      searchedType !== 'name' &&\n      searchedType !== 'region' &&\n      searchedType !== 'language' &&\n      searchedType !== 'currency'\n    ) {\n      return null;\n    }\n\n    if (searchedType === 'currency') {\n      return value.filter(v =>\n        v.currencies.some(\n          c =>\n            (c.code || '').match(new RegExp(searchedText, 'gi')) ||\n            (c.name || '').match(new RegExp(searchedText, 'gi'))\n        )\n      );\n    }\n\n    if (searchedType === 'language') {\n      return value.filter(v =>\n        v.languages.some(\n          c =>\n            (c.iso639_2 || '').match(new RegExp(searchedText, 'gi')) ||\n            (c.name || '').match(new RegExp(searchedText, 'gi'))\n        )\n      );\n    }\n    return value.filter(v =>\n      v[searchedType].match(new RegExp(searchedText, 'gi'))\n    );\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DataStorageService } from '../data-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  @Output() closedClicked = new EventEmitter<boolean>();\n  searchedText: string;\n  results: {}[] = [];\n  constructor(private _dataStore: DataStorageService, private router: Router) {}\n\n  ngOnInit() {\n    this.results = this._dataStore.shortDataStore;\n  }\n  closeSearch() {\n    this.closedClicked.emit(false);\n  }\n  onSubmit() {\n    this.router.navigate(['/results', 'name'], {\n      queryParams: { q: this.searchedText }\n    });\n  }\n}\n","<div class=\"close\">\n  <a (click)=\"closeSearch()\">\n    <i class=\"icon-cancel\"></i>\n  </a>\n</div>\n<form (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\n  <input type=\"text\" name=\"search\" [(ngModel)]=\"searchedText\" placeholder=\"Type-in a Country\" autofocus>\n  <a type=\"submit\" [routerLink]=\"['/results','name']\" [queryParams]=\"{q:searchedText}\">\n    <i class=\"icon-right\"></i>\n  </a>\n</form>\n<div class=\"search__results\">\n  <div class=\"result\" *ngFor=\"let result of results|searchResults:searchedText:'name'|slice:0:10\" [routerLink]=\"['/details',result.alpha3Code]\">\n    <img [src]=\"result.flag\" [alt]=\"result.name\">\n    <span class=\"name\">{{result.name}}</span>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}